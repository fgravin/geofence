################################################################################
## GeoFence property override file
##
################################################################################
## Please note that the property keys in this ovr file *do not* have the same
## meaning of the keys in the geofence-datasource.properties file.
## If you need more info about this, please check the doc about
## Spring's PropertyOverrideConfigurer and PropertyPlaceholderConfigurer.
################################################################################

################################################################################
## Override DB connection parameters

################################################################################
## When customizing the backend DBMS, make sure you have in your classpath both
## the proper JDBC driver jar and the hibernate dialect.
##

geofenceVendorAdapter.databasePlatform=org.hibernatespatial.postgis.PostgisDialect
geofenceDataSource.driverClassName=org.postgresql.Driver
geofenceDataSource.url=jdbc:postgresql://localhost:5432/geofence
geofenceDataSource.username=geofence
geofenceDataSource.password=geofence
geofenceEntityManagerFactory.jpaPropertyMap[hibernate.default_schema]=geofence

#geofenceVendorAdapter.databasePlatform=org.hibernatespatial.geodb.GeoDBDialect
#geofenceDataSource.driverClassName=org.h2.Driver
#geofenceDataSource.url=jdbc:h2:geofence_db/geofence
#geofenceDataSource.username=sa
#geofenceDataSource.password=sa
#geofenceEntityManagerFactory.jpaPropertyMap[hibernate.default_schema]=public

################################################################################
## Other setup entries
################################################################################
## hbm2ddl.auto may assume one of these values:
## - validate: validates the DB schema at startup against the internal model. May fail on oracle spatial.
## - update: updates the schema, according to the internal model. Updating automatically the production DB is dangerous.
## - create-drop: drop the existing schema and recreates it according to the internal model. REALLY DANGEROUS, YOU WILL LOSE YOUR DATA.
## You may want not to redefine the property entirely, in order to leave the defult value (no action).

geofenceEntityManagerFactory.jpaPropertyMap[hibernate.hbm2ddl.auto]=update
geofenceEntityManagerFactory.jpaPropertyMap[javax.persistence.validation.mode]=none
geofenceEntityManagerFactory.jpaPropertyMap[hibernate.validator.apply_to_ddl]=false
geofenceEntityManagerFactory.jpaPropertyMap[hibernate.validator.autoregister_listeners]=false  

##
## ShowSQL is set to true in the configuration file; putting showsql=false in
## this file, you can easily check that this override file has been properly applied.

# geofenceVendorAdapter.generateDdl=false
# geofenceVendorAdapter.showSql=false

## Set to "true" in specific use cases
# workspaceConfigOpts.showDefaultGroups=false



################################################################################
## Disable second level cache.
## This is needed in a geofence-clustered environment.

#geofenceEntityManagerFactory.jpaPropertyMap[hibernate.cache.use_second_level_cache]=false

################################################################################
## Use external ehcache configuration file.
## Useful to change cache settings, for example diskStore path.
#geofenceEntityManagerFactory.jpaPropertyMap[hibernate.cache.provider_configuration_file_resource_path]=file:/path/to/geofence-ehcache-override.xml

geofenceGlobalConfiguration.baseLayerTitle=Fond GIP
geofenceGlobalConfiguration.baseLayerFormat=image/jpeg
geofenceGlobalConfiguration.baseLayerStyle=
geofenceGlobalConfiguration.mapCenterLon=0.10626
geofenceGlobalConfiguration.mapCenterLat=44.35909
geofenceGlobalConfiguration.mapZoom=7
